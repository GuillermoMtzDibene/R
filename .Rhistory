library(tidyverse)
library(modelr)
library(gapminder)
population <- read_csv(file = "population_total.csv")
library(tidyverse)
library(modelr)
library(gapminder)
population <- read_csv(file = "population_total.csv")
child_birth <- read_csv(file = "children_per_woman_total_fertility.csv")
population <- population %>%
gather(
"1800":"2100",
key = "year",
value = "population",
na.rm = TRUE
)
child_birth <- child_birth %>%
gather(
"1800":"2100",
key = "year",
value = "avg_rate",
na.rm = TRUE
)
child_birth <- child_birth %>%
left_join(population)
sel_country <- function(names, df) {
filter(df, country %in% names)
}
#I'm going to select two developed countries: Japan  and Canada since their populations are fairly aged and young, resp. I also will select several other countries in the developing world.
countries = c("Canada", "Japan", "Chile", "Kenya", "Mexico", "Vietnam", "Ethiopia", "Congo")
pop_countries <- sel_country(countries, population)
pop_countries %>%
ggplot(aes(year, population, colour = country)) +
geom_ref_line(v = "2015", colour = "grey", size = 1) +
geom_point(size = 0.65) +
theme_classic() +
scale_y_continuous(name = "Population in millions", breaks = seq(0, 3e8, by = 15e6), labels = seq(0, 300, by = 15)) +
scale_x_discrete(name = "Year", breaks = seq(1800, 2100, by = 20)) +
labs(title = "Population growth from 1800 until 2100", subtitle = "Expected growth from 2015 onwards") +
guides(
colour = guide_legend(override.aes = list(size = 3))
)
tot_pop <- population %>%
group_by(year) %>%
summarise(total = sum(population))
tot_pop
ggplot(tot_pop, aes(year, total)) +
geom_ref_line(v = "2015", colour = "grey", size = 1) +
geom_ref_line(h = 1.1e10, colour = "grey", size = 1) +
geom_point(size = 0.75) +
theme_classic() +
scale_y_continuous(name = "Total wordl population in billion", breaks = seq(0, 1.2e10, by = 1e9), labels = seq(0, 12, by = 1)) +
scale_x_discrete(name = "Year", breaks = seq(1800, 2100, by = 20))
birth_countries <- child_birth %>%
filter(country %in% countries, year >= 1950)
#The function bind_rows(df1, df2) essentially stacks df1 on TOP of df2 using the same columns-names and introducing NA for values not found in either tibble. Inside the function call I am defining the tibble df2 as the country "World" which considers the average birth rate worldwide. Notice that due to different population sizes we simply cannot consider the mean of the averages.
birth_countries <- bind_rows(birth_countries,
birth_countries %>%
group_by(year) %>%
summarise(
country = "World",
avg_rate = sum(avg_rate * population) / sum(population),
population = sum(population)
)
)
birth_countries %>%
ggplot(aes(year, avg_rate)) +
geom_ref_line(h = 2, size = .75, colour = "grey") +
geom_point(aes(colour = country), size = 1) +
theme_classic() +
scale_x_discrete(name = "Year", breaks = seq(1800, 2100, by = 20)) +
guides(
colour = guide_legend(
title = "Country",
override.aes = list(size = 4))
) +
scale_colour_brewer(palette = "Set1")
birth_countries <- child_birth %>%
filter(country %in% countries, year >= 1950)
#The function bind_rows(df1, df2) essentially stacks df1 on TOP of df2 using the same columns-names and introducing NA for values not found in either tibble. Inside the function call I am defining the tibble df2 as the country "World" which considers the average birth rate worldwide. Notice that due to different population sizes we simply cannot consider the mean of the averages.
birth_countries <- bind_rows(birth_countries,
birth_countries %>%
group_by(year) %>%
summarise(
country = "World",
avg_rate = sum(avg_rate * population) / sum(population),
population = sum(population)
)
)
birth_countries %>%
ggplot(aes(year, avg_rate)) +
geom_ref_line(h = 2, size = .75, colour = "grey") +
geom_point(aes(colour = country), size = 1) +
theme_classic() +
scale_y_continuous(name = "Average number of children born for every women") +
scale_x_discrete(name = "Year", breaks = seq(1800, 2100, by = 20)) +
guides(
colour = guide_legend(
title = "Country",
override.aes = list(size = 4))
) +
scale_colour_brewer(palette = "Set1")
library(tidyverse)
library(modelr)
library(gapminder)
population <- read_csv(file = "population_total.csv")
child_birth <- read_csv(file = "children_per_woman_total_fertility.csv")
population <- population %>%
gather(
"1800":"2100",
key = "year",
value = "population",
na.rm = TRUE
)
child_birth <- child_birth %>%
gather(
"1800":"2100",
key = "year",
value = "avg_rate",
na.rm = TRUE
)
child_birth <- child_birth %>%
left_join(population)
sel_country <- function(names, df) {
filter(df, country %in% names)
}
#I'm going to select two developed countries: Japan  and Canada since their populations are fairly aged and young, resp. I also will select several other countries in the developing world.
countries = c("Canada", "Japan", "Chile", "Kenya", "Mexico", "Vietnam", "Ethiopia", "Congo")
pop_countries <- sel_country(countries, population)
pop_countries %>%
ggplot(aes(year, population, colour = country)) +
geom_ref_line(v = "2015", colour = "grey", size = 1) +
geom_point(size = 0.65) +
theme_classic() +
scale_y_continuous(name = "Population in millions", breaks = seq(0, 3e8, by = 15e6), labels = seq(0, 300, by = 15)) +
scale_x_discrete(name = "Year", breaks = seq(1800, 2100, by = 20)) +
labs(title = "Population growth from 1800 until 2100", subtitle = "Expected growth from 2015 onwards") +
guides(
colour = guide_legend(override.aes = list(size = 3))
)
tot_pop <- population %>%
group_by(year) %>%
summarise(total = sum(population))
tot_pop
ggplot(tot_pop, aes(year, total)) +
geom_ref_line(v = "2015", colour = "grey", size = 1) +
geom_ref_line(h = 1.1e10, colour = "grey", size = 1) +
geom_point(size = 0.75) +
theme_classic() +
scale_y_continuous(name = "Total world population in billions", breaks = seq(0, 1.2e10, by = 1e9), labels = seq(0, 12, by = 1)) +
scale_x_discrete(name = "Year", breaks = seq(1800, 2100, by = 20)) +
labs(tilte = "Total world population and expected growth")
birth_countries <- child_birth %>%
filter(country %in% countries, year >= 1950)
#The function bind_rows(df1, df2) essentially stacks df1 on TOP of df2 using the same columns-names and introducing NA for values not found in either tibble. Inside the function call I am defining the tibble df2 as the country "World" which considers the average birth rate worldwide. Notice that due to different population sizes we simply cannot consider the mean of the averages.
birth_countries <- bind_rows(birth_countries,
birth_countries %>%
group_by(year) %>%
summarise(
country = "World",
avg_rate = sum(avg_rate * population) / sum(population),
population = sum(population)
)
)
birth_countries %>%
ggplot(aes(year, avg_rate)) +
geom_ref_line(h = 2, size = .75, colour = "grey") +
geom_point(aes(colour = country), size = 1) +
theme_classic() +
scale_y_continuous(name = "Average number of children born for every women") +
scale_x_discrete(name = "Year", breaks = seq(1800, 2100, by = 20)) +
guides(
colour = guide_legend(
title = "Country",
override.aes = list(size = 4))
) +
scale_colour_brewer(palette = "Set1")
